#!/usr/bin/env ruby
require 'fileutils'
require 'timeout'
require 'optparse'
require_relative '../config/unicorn/config'

ROOT    = File.absolute_path(File.dirname(__FILE__) + '/..')
bin     = File.split(__FILE__).last
usage   = %Q{
  usage: #{bin} -E environment [-h|--help] command

  Commands are:
    start             Start all webservers.
    stop              Stop all webservers.
    restart           Restart all webservers.

  Options:
    -E environment    Runtime environment, development by default.
}.strip

def unicorn_pid env
  pidfile = UNICORN_CONFIG[env.to_sym][:pidfile]
  if File.exists?(pidfile)
    File.read(pidfile).to_i
  else
    nil
  end
end

def start_unicorn env
  cmd = [ "cd #{ROOT} && bundle exec unicorn" ]
  cmd << "-E #{env}"
  cmd << '-c %s/config/unicorn/unicorn.rb' % ROOT
  cmd << '-D' if env == 'production'
  cmd << ROOT + '/config.ru'

  puts 'Starting Unicorn ... '
  if system(cmd.join(' '))
    puts 'OK'
  else
    puts 'FAILED'
    puts $?
    exit 1
  end
end

def stop_unicorn env
  pid = unicorn_pid(env)
  if pid
    puts 'Stopping Unicorn ... '
    Process.kill('QUIT', pid) rescue nil
    begin
      timeout(5) do
        sleep 0.2 until Process.kill(0, pid) rescue nil
      end
      puts 'OK'
    rescue Timeout::Error => e
      puts 'FAILED'
      puts 'Killing ... '
      Process.kill('KILL', pid) rescue nil
      puts 'OK'
    end
  end
end

def restart_unicorn env
  stop_unicorn(env)
  sleep 1
  start_unicorn(env)
end

env    = 'development'
parser = OptionParser.new do |opts|
  opts.on('-h', '--help', 'Displays help') do
    puts usage
    exit
  end
  opts.on('-E environment', String) do |value|
    env = value
  end
end

begin
  parser.parse!
rescue OptionParser::InvalidOption => e
  $stderr.puts e.message
  $stderr.puts usage
  exit -1
end

command = (ARGV.shift || 'help').strip

case command
  when /help/
    puts usage
    exit 0
  when /^(start|stop|restart)$/
    send('%s_unicorn' % $1, env)
    exit 0
  else
    warn "#{bin}: '#{command}' is not an #{bin} command. See '#{bin} --help'."
    exit -1
end
